#include "{{ headfile_name }}"
#include "_generated/serializer/all_serializer.h"

## for meta_register in meta_registers
::GEngine::Reflection::ClassDescriptor& ::{{ meta_register.meta_name }}::getClass() {
    static ::GEngine::Reflection::ClassDescriptor& classDesc = ::GEngine::Reflection::Registry::instance().getClass("{{ meta_register.meta_name }}");
    return classDesc;
}

std::string_view {{ meta_register.meta_name }}::getClassName() {
    return "{{ meta_register.meta_name }}";
}

void ::{{ meta_register.meta_name }}::dynamicSerializeFromJson(const Json &jsonContext, GObject* outer) {
    Serializer::read(jsonContext, *this, outer);
}
##endfor